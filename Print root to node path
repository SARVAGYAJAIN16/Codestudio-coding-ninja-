Problem statement
You are given a binary tree with ‘N’ number of nodes and a node ‘X’. Your task is to print the path from the root node to the given node ‘X’.

A binary tree is a hierarchical data structure in which each node has at most two children.


Example:
Here, for ‘X ’= 7, the output will be 1 3 7.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
1 <= T <= 10
1 <= N <= 10000
1 <= X <= N
All the node values will be in a range from 1 to N.

Time limit: 1 sec.
Sample Input 1 :
2
1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1
7
3 2 1 -1 -1 -1 -1
1
Sample output 1 :
1 3 7
3 1
Explanation For Sample Output 1:
For the first test case, the tree will be:

Here, for ‘X ’= 7, the output will be 1 3 7.


For the second test case, the tree will be:

Here, for ‘X ’= 1, the output will be 3 1.
Sample Input 2 :
2
1 3 -1 -1 4 2 -1 -1 -1
1
4 -1 1 2 -1 -1 3 -1 -1
1
Sample output 2 :
1
4 1 

code:-----------------------------------------------------------------

bool getpath(TreeNode<int> *root, vector<int>&arr , int x)
{
	if(!root) return false;
	arr.push_back(root -> data);
	if (root -> data == x) return true;

	if (getpath(root-> left, arr,x) || getpath(root -> right, arr , x))
	{
		return true;
	}
	arr.pop_back();
	return false;
}

vector<int> pathInATree(TreeNode<int> *root, int x)
{
    // Write your code here.
	vector<int>arr;
	if(root == NULL)
	{
		return arr;
	}
	getpath(root,arr,x);
	return arr;
}
